name: CI DOC Checker

on:
  pull_request_target:
    types:
      - opened
      - synchronize
    branches:
      - main
      - 'branch*'

permissions: write-all

jobs:
  doc-checker:
    runs-on: ubuntu-latest
    name: DOC FILTER
    if: >
      !contains(github.event.pull_request.title, '(sync #') &&
      !contains(github.event.pull_request.labels.*.name, 'sync') &&
      (!startsWith(github.head_ref, github.base_ref) || !contains(github.head_ref, '-sync-'))
    outputs:
      output1: ${{ steps.doc-changes-info.outputs.doc }}
      oss-doc: ${{ steps.doc-changes-info.outputs.oss-doc }}
      bare-metal-doc: ${{ steps.doc-changes-info.outputs.bare-metal-doc }}
      operator-doc: ${{ steps.doc-changes-info.outputs.operator-doc }}
    steps:
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            doc:
                - 'docs/**'
            oss-doc:
                - 'docs/en/**'
                - 'docs/docusaurus/**'
            bare-metal-doc:
                - 'docs/enterprise-edition/bare-metal/**'
            operator-doc:
                - 'docs/enterprise-edition/kubernetes/**'
      - name: DOC CHECK INFO
        id: doc-changes-info
        run: |
          echo "doc=${{ steps.changes.outputs.doc }}" >> $GITHUB_OUTPUT
          echo "oss-doc=${{ steps.changes.outputs.oss-doc }}" >> $GITHUB_OUTPUT
          echo "bare-metal-doc=${{ steps.changes.outputs.bare-metal-doc }}" >> $GITHUB_OUTPUT
          echo "operator-doc=${{ steps.changes.outputs.operator-doc }}" >> $GITHUB_OUTPUT


  remove-doc-label:
    needs: doc-checker
    runs-on: ubuntu-latest
    name: REMOVE DOC LABEL
    if: ${{ needs.doc-checker.outputs.output1 != 'true' }}
    steps:
      - name: remove document label
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: documentation

  add-doc-label:
    needs: doc-checker
    runs-on: ubuntu-latest
    name: ADD DOC LABEL
    if: ${{ needs.doc-checker.outputs.output1 == 'true' }}
    steps:
      - name: add document label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: documentation

  markdownlint:
    needs: doc-checker
    runs-on: ubuntu-latest
    env:
      PR_NUMBER: ${{ github.event.number }}
    steps:
      - name: clean
        run: |
          rm -rf ${{ github.workspace }}
          mkdir -p ${{ github.workspace }}
      - name: BRANCH INFO
        id: branch
        run: |
          echo ${{github.base_ref}}
          echo "branch=${{github.base_ref}}" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout PR
        run: |
          BRANCH=${{steps.branch.outputs.branch}}
          git config --global user.name "wanpengfei-git";
          git config --global user.email "wanpengfei91@163.com";
          git checkout $BRANCH;
          git pull;
          BRANCH_NAME="${BRANCH}-${PR_NUMBER}";
          git fetch origin pull/${PR_NUMBER}/head:${BRANCH_NAME};
          git checkout $BRANCH_NAME;
          git checkout -b merge_pr;
          git merge --squash --no-edit ${BRANCH} || (echo "::error::Merge conflict, please check." && exit -1);

      - uses: actions/setup-node@v3
        with:
          node-version: 21

      - name: Combine open-source and Bare-Metal Enterprise docs
        if: needs.doc-checker.outputs.bare-metal-doc == 'true'
        run: |
            # docusaurus config goes in workingdir and combined
            # open-source and Bare-Metal docs go in workingdir/docs
            mkdir -p workingdir/docs
            cp -r docs/en/* workingdir/docs
            rm -rf workingdir/docs/deployment
            rm workingdir/docs/introduction/what_is_starrocks.md
            rm -rf workingdir/docs/quick_start
            rm -rf workingdir/docs/benchmarking
            rm -rf workingdir/docs/developers
            rm -rf workingdir/docs/project_help
            mkdir workingdir/docs/deployment
            rm workingdir/docs/data_source/iceberg*
            rm -rf workingdir/docs/cover_pages
            rm -rf workingdir/docs/release_notes
            rm -rf workingdir/docs/ecosystem_release
            rm workingdir/docs/data_source/icebergtutorial.mdx
            rm workingdir/docs/introduction/StarRocks_intro.md
            rm workingdir/docs/administration/stargo.md
            rm -rf workingdir/docs/integrations/other_integrations
            rm workingdir/docs/integrations/streaming.mdx
            rm workingdir/docs/loading/Json_loading.md
            rm workingdir/docs/loading/loading.mdx
            rm workingdir/docs/loading/loading_introduction/loading_overview.mdx
            rm workingdir/docs/loading/objectstorage.mdx
            rm workingdir/docs/unloading/unloading.mdx
            cp -r docs/docusaurus/* workingdir/

            cp -r \
            docs/enterprise-edition/bare-metal/docusaurus/docusaurus.config.js \
            docs/enterprise-edition/bare-metal/docusaurus/package.json \
            docs/enterprise-edition/bare-metal/docusaurus/yarn.lock \
            docs/enterprise-edition/bare-metal/docusaurus/babel.config.js \
            docs/enterprise-edition/bare-metal/docusaurus/sidebars.js* \
            docs/enterprise-edition/bare-metal/docusaurus/src \
            docs/enterprise-edition/bare-metal/docusaurus/static \
            workingdir/

            rsync -avhrW --progress ./docs/enterprise-edition/bare-metal/docs workingdir/docs/
            cp docs/en/deployment/plan_cluster.md workingdir/docs/deployment/15_plan_cluster.md

            rsync -avhrW --progress ./docs/enterprise-edition/docusaurus/* workingdir/

            find workingdir/docs -name "*.md*" | xargs -d "\n" sed -i "s/displayed_sidebar:.*//"
  
      - name: Combine open-source and Kubernetes Enterprise docs
        if: needs.doc-checker.outputs.operator-doc == 'true'
        run: |
            # docusaurus config goes in workingdir and combined
            # open-source and Enterprise docs go in workingdir/docs
            mkdir -p workingdir/docs
            cp -r docs/en/* workingdir/docs
            # some open-source docs get removed
            rm -rf workingdir/docs/quick_start
            rm -rf workingdir/docs/benchmarking
            rm -rf workingdir/docs/developers
            rm -rf workingdir/docs/project_help
            rm -rf workingdir/docs/deployment
            mkdir workingdir/docs/deployment
            echo "\# helm deployment here" > workingdir/docs/deployment/helm.md
            rm workingdir/docs/data_source/iceberg*
            mkdir workingdir/docs/quick_start
            # Copy in the Docusaurus configs from open-source
            cp -r ./docs/docusaurus/* workingdir/
            # Add in the Enterprise specific docs
            rsync -avhrW --progress ./docs/enterprise-edition/en/ workingdir/docs/
            # Add Enterprise specific config for Docusaurus
            rsync -avhrW --progress ./docs/enterprise-edition/components/ workingdir/src/components/
            rsync -avhrW --progress ./docs/enterprise-edition/img/ workingdir/static/img/
            cp ./docs/enterprise-edition/docusaurus.config.js workingdir/docusaurus.config.js
            cp ./docs/enterprise-edition/sidebars.json workingdir/sidebars.json
            sed -i "s/: 'throw',/: 'warn',/" workingdir/docusaurus.config.js
            # hide the assets dir from nav and search
            mv workingdir/docs/assets workingdir/docs/_assets
            find workingdir/docs -name "*.md*" | xargs -d "\n" sed -i "s/\/assets\//\/_assets\//"
            # Remove unused files
            rm workingdir/docs/cover_pages/deployment_preparation* workingdir/docs/cover_pages/developers* workingdir/docs/cover_pages/manage_deployment* workingdir/docs/cover_pages/shared_nothing_deployment*

      - uses: articulate/actions-markdownlint@v1.1.0
        with:
          config: "docs/.markdownlint.json"
          files: 'workingdir/docs/**/*.md'
          ignore: node_modules
          version: 0.28.1

      - name: docusaurus-mdx-checker
        if: always()
        run: |
          npx docusaurus-mdx-checker -c workingdir/docs

      - name: link check
        if: always()
        uses: lycheeverse/lychee-action@v1.8.0
        with:
          fail: true
          args: >
            --config docs/lychee.toml
            --offline "workingdir/docs/**/*.md"

      - name: Install dependencies
        working-directory: workingdir
        run: |
            yarn install

      - name: Docusaurus Build
        working-directory: workingdir
        env:
            NODE_OPTIONS: "--max-old-space-size=8192"
            DISABLE_VERSIONING: true
        run: |
            yarn build

  behavior-unchange:
    runs-on: ubuntu-latest
    needs: add-doc-label
    env:
      PR_NUMBER: ${{ github.event.number }}
      REPO: ${{ github.repository }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Set Body
        run: |
          body=$(gh pr view ${PR_NUMBER} -R ${REPO} --json body -q .body)
          body=${body//"[x] Yes, this PR will result in a change in behavior."/"[ ] Yes, this PR will result in a change in behavior."}
          body=${body//"[ ] No, this PR will not result in a change in behavior."/"[x] No, this PR will not result in a change in behavior."}
          gh pr edit ${PR_NUMBER} -R ${REPO} -b "$body"

